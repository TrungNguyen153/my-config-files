cls
casd
asddaasdasdasdasdsdfsdf
cls
scoop install 7zip
cls
cd D:\rust-workspace\NFTGame-Gunship\
nvim .
cls
cd D:\rust-workspace\NFTGame-Gunship\
nvim .
cls
nvim .
cls
cd D:\rust-workspace\NFTGame-Gunship\
nvim .
cd D:\rust-workspace\NFTGame-Gunship\
clear
nvim .
cls
nvim .
cls
cd ..
cd D:\rust-workspace\LienQuanSieuCap
cls
cargo init
cls
nvim .
cls
nvim .
cls
cd libs\adb-commands\
ls
cargo init adb_commands
scoop install vscode
nvim .
cls
nvim .
ls
rm -r adb_commands
ls
cargo init
nvim .
cls
nvim .
cd D:\rust-workspace\LienQuanSieuCap\
cd libs\
ls
cd scrcpy-rs\
cargo init
cargo check
cargo build
cargo check
exit
cd libs\scrcpy-rs\
cargo check
exit
cd libs\scrcpy-rs\
cargo check
exit
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
cargo check
cd libs\scrcpy-rs\
cargo check
cd D:\rust-workspace\LienQuanSieuCap\
cd libs\scrcpy-rs\
cargo check
cargo build
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
nvim .
cls
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
cd libs\ldplayer-commands\
cargo init --lib
nvim .
cls
nvim .
cd D:\rust-workspace\LienQuanSieuCap\
cls
cd libs\botter\
cargo init --lib
nvim .
cls
nvim .
cls
cd libs\botter\
cargo check
exit
nvim .
cls
cd D:\rust-workspace\bonsai\
cls
exit
clear
cd examples\
ls
cls
ls
cargo run --example async_drone
cargo run async_drone
cargo run --bin async_drone
cargo run --bin boids
nvim .
clear
cd D:\rust-workspace\LienQuanSieuCap\
nvim .
cls
explorer .
cargo check
nvim .
cls
cargo check
nvim .
clear
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
nvim .
cls
nvim .
cls
cargo build --release
exit
cargo build --release
cargo build
RUST_BACKTRACE=full cargo build -vv 
cargo clean
cls
cargo build --release
cls
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
cargo build --release
explorer .
cargo run --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
nvim .
cls
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
explorer .
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
nvim .
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
nvim .
cd D:\rust-workspace\LienQuanSieuCap\
cargo build --release
cls
cargo build --release
explorer .
cls
cargo run --release
cls
cargo run --release
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo run --release
nvim .
cd ..
ls
cd bonsai\
ls
cat Cargo.toml
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
cls
cd D:\rust-workspace\bonsai\
cd examples\
ls
cd src\
ls
cd async_drone\
ls
cargo build --bin async_drone
cls
cargo test async_drone::test::test
cargo test --bin "async_drone"
cargo test --bin "async_drone" -- --no-capture
cargo test --bin "async_drone" -- --nocapture
cls
cargo test --bin "async_drone" -- --nocapture
cls
cargo test --bin "async_drone" -- --nocapture
cargo build --release
cargo test --bin "async_drone" -- --nocapture
cls
cargo test --bin "async_drone" -- --nocapture
nvim .
cls
cargo test --bin "async_drone" -- --nocapture
cls
cargo test --bin "async_drone" -- --nocapture
cls
cargo test --bin "async_drone" -- --nocapture
:qa
nvim .
cls
nvim .
cls
cd D:\rust-workspace\bonsai\
cargo test --bin "async_drone" -- --nocapture
cls
cargo test --bin "async_drone" -- --nocapture
cargo run --bin async_drone
cls
cargo run --bin async_drone
cls
cargo run --bin async_drone
cls
cargo run --bin async_drone
explorer .
cargo build --bin async_drone
cargo build --bin async_drone --release
cls
cargo run --bin async_drone --release
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
cd libs\behavior_tree_async\
cargo init --lib
nvim .
cls
cargo build
nvim .
cls
cargo build --release
explorer .
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
nvim .
cd D:\rust-workspace\LienQuanSieuCap\
nvim .
cd D:\rust-workspace\LienQuanSieuCap\
cargo build --release
explorer .
cargo build --release
explorer .
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
nvim .
cls
cargo build --release
nvim .
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
nvim .
cls
cargo build --release
nvim .
cls
cd D:\rust-workspace\LienQuanSieuCap\
cargo build --release
explorer .
nvim .
cls
cargo build --release
nvim .
cls
nvim .
cls
nvim .
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
nvim .
cls
cargo build --release
nvim .
cd D:\rust-workspace\LienQuanSieuCap\
cargo build --release
explorer .
cls
cargo build --release
nvim .
cls
nvim .
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cd ..
mkdir projectA
cd projectA\
ls
mkdir backend
mkdir frontend
cargo init --workspace
cargo init -- --workspace
ls
cargo new --workspace
cat Cargo.toml
open
open Cargo.toml
cd backend\
cargo init --bin
ls
cd ..
cd frontend\
ls
cls
node --version
nvim .
ls
/003 ÔÅª  frontend/
npm create skeleton-app@latest frontend
ls
rmdir -r frondend
rm -r frontend\
ls
cls
npm create skeleton-app@latest frontend
pnpm
iwr https://get.pnpm.io/install.ps1 -useb | iex
ls
pnpm
ls
cd D:\rust-workspace\projectA\
ls
cd frontend\
ls
cls
nvim .
cls
nvim .
cls
nvim .
cls
pnpm run dev
cls
pnpm run dev
cls
pnpm install pocketbase
nvim .
cls
pnpm install pocketbase
pnpm run dev
cls
nvim .
pnpm install
pnpm install pocketbase
cd D:\rust-workspace\projectA\
cd frontend\
cls
nvim .
cls
nvim .
svelte-kit sync
pnpm svelte-kit sync
nvim .
cls
nvim .
cls
nvim .
exit
cls
exit
cd D:\rust-workspace\projectA\
nvim .
cd D:\rust-workspace\projectA\frontend\
nvim .
pnpm install -g prettier_d_slim
nvim .
explorer .
cls
pnpm svelte-kit sync
pnpm run dev
pnpm svelte-kit sync
nvim .
cls
pnpm run dev
pnpm svelte-kit sync
cls
pnpm svelte-kit sync
nvim .
pnpm svelte-kit sync
pnpm run dev
cls
nvim .
pnpm run dev
cd D:\rust-workspace\projectA\frontend\
nvim .
cls
nvim .
cls
pnpm run dev
cls
pnpm run dev
cls
pnpm run dev
pnpm svelte-kit sync
pnpm run dev
cls
pnpm clean
pnpm store prune
pnpm install
pnpm run dev
cls
pnpm run dev
cls
explorer .
pnpm install
nvim .
cls
pnpm run dev
cls
nvim .
nvim .
cls
nvim .
pnpm run dev
cls
nvim .
cd D:\rust-workspace\projectA\frontend\
nvim .
pnpm run dev
nvim .
pnpm svelte-kit sync
explorer .
pnpm run dev
pnpm install dayjs
pnpm install numeral
pnpm install -d @types/numeral
pnpm remove @types/numeral
pnpm install -D @types/numeral
cd D:\rust-workspace\projectA\frontend\
cls
nvim .
pnpm run dev
scoop bucket add java
scoop install java/corretto19-jdk
apktool
dotnet --version
cls
cd D:\rust-workspace\lien-quan-rs
ls
cargo install --force cargo-make
cargo build --release
cargo install cross --git https://github.com/cross-rs/cross
cls
rustup --list
rustup --show
rustup --help
rustup show
rustup target
rustup toolchain
rustup toolchain list
rustup --help
rustup toolchain list
rustup toolchain
rustup show
rustup toolchain
rustup toolchain install armv7-linux-androideabi
rustup --help
rustup target armv7-linux-androideabi
rustup override set armv7-linux-androideabi
rustup target add armv7-linux-androideabi
rustup show
rustup --help
rustup override set armv7-linux-androideabi
cargo show
rustup show
rustup toolchain install armv7-linux-androideabi
rustup toolchain
rustup toolchain install stable-armv7-linux-androideabi
cargo build
cargo build --lib
rustup show
cd libs\yaui\
cargo build --lib
cargo build
cargo build --features cli
cargo build
cross build --target aarch64-linux-android
cd libs\yaui\
cd D:\rust-workspace\lien-quan-rs
cls
cd libs\yaui\
cross build --target aarch64-linux-android
explorer .
cargo clean
cross build --target aarch64-linux-android
wsl -l -v
nvim .
podman --help
podman machine
podman machine info
explorer C:\Users\TN963\.local\share\containers\podman\podman
podman machine stop
podman machine rm podman-machine-default
wsl -l -v
cd libs\yaui\
cross build --target aarch64-linux-android
podman Configure
podman --help
podman system
podman machine
podman machine info
podman machine init
podman machine info
podman machine init
cross build --target aarch64-linux-android
explorer .
cross build --lib --target aarch64-linux-android
nvim .
cls
rustup target add aarch64-linux-android
cross build --lib --target aarch64-linux-android
cargo clean
cross build --lib --target aarch64-linux-android
cargo make push-injector
cargo make pushinjector
cargo make ainject
cargo make pushinjector
cargo make ainject
cargo make build-push-injector
cargo make build-injector
cargo make build-push-injector
cls
cargo make build-injector
cargo make push-injector
exit
cargo make push-injector
which.exe adb
where.exe adb
adb
exit
nvim .
cd D:\rust-workspace\lien-quan-rs
cargo make push-injector
cargo make injector-dump-name
nvim .
cargo make injector-dump-name
adb logcat -s "SellingLobbies"
cls
cd D:\rust-workspace\lien-quan-rs
cls
cargo make injector-dump-name
cargo make push-injector
cargo make injector-dump-name
adb shell cat /proc/cpuinfo
cargo make injector-dump-name
cls
cargo make build-injector
podman machine init
wsl
wsl -l -v
wsl -l -o
wsl -i Ubuntu-22.04
adb logcat -s "SellingLobbies"
adb shell getprop ro.product.cpu.abilist
wsl -i Ubuntu-22.04
wsl --install
cls
podman machine init
podman machine start
cd D:\rust-workspace\lien-quan-rs
cargo make build-injector
wsl -l -o
wsl -l -v
wsl
cd D:\rust-workspace\lien-quan-rs
cargo make build-injector
cd D:\rust-workspace\lien-quan-rs
cargo make push-injector
cd D:\rust-workspace\lien-quan-rs
cargo make push-injector
rustup show
rustup --help
rustup show
rustup toolchain remove aarch64-linux-android
rustup show
rustup toolchain remove aarch64-linux-android
rustup target remove aarch64-linux-android
rustup --help
rustup target
rustup target remove aarch64-linux-android
rustup target list
rustup target remove stable-x86_64-unknown-linux-gnu
rustup toolchain remove stable-x86_64-unknown-linux-gnu
rustup show
rustup toolchain remove stable-armv7-linux-androideabi
rustup toolchain remove armv7-linux-androideabi
cd D:\rust-workspace\lien-quan-rs
cargo make push-injector
adb connect 127.0.0.1:53971
cargo make push-injector
adb devices
cargo make push-injector
explorer .
cargo make build-injector
cargo make push-injector
cargo make injector-dump-name
nvim .
cargo make build-injector
cargo make push-injector
cargo make injector-dump-name
cargo make build-injector
cargo make push-injector
cargo make injector-dump-name
cargo make build-injector
cargo make push-injector
cargo make injector-dump-name
cargo make push-injector
cargo make injector-dump-name
cargo make build-injector
cargo make push-injector
cargo make injector-dump-name
cls
cargo make ainject
cargo make injector-dump-name
cargo make ainject
cargo make build-injector
cargo make push-injector
cargo make ainject
cls
cargo make build-injector
cargo make push-injector
cargo make ainject
cargo make build-injector
cargo make push-injector
cargo make ainject
cls
cargo make build-injector
cargo make push-injector
cargo make ainject
cargo make build-injector
cargo make push-injector
cargo make ainject
cls
cargo make build-injector
cargo make push-injector
cargo make ainject
cls
cargo make all
adb devices
cd D:\rust-workspace\lien-quan-rs
adb devices
cargo make all
adb devices
cargo make all
explorer .
cargo make build-push-dumps
cargo make all
cls
cargo make all
nvim .
cd D:\rust-workspace\lien-quan-rs
cargo make all
nvim .
cls
cargo make all
adb devices
adb push target/i686-linux-android/release/liblien_quan_rs.so /sdcard/Pictures
cargo make all
explorer .
cd libs
ls
git clone https://github.com/ohchase/ptrace-do
cd ..
cd libs
ls
nvim .
cls
cd ..
nvim .
cls
cargo make run-test-binary
cargo make all
cargo make run-test-binary
cls
cargo make run-test-binary
cls
cargo make all
cargo make run-test-binary
cargo make all
cls
cargo make all
cargo make run-test-binary
adb shell getprop ro.product.cpu.abilist
adb shell getprop ro.product.cpu.abi
cargo make run-test-binary
cls
cargo make run-test-binary
cls
cargo make all
cargo make run-test-binary
cargo make all
cd D:\rust-workspace\lien-quan-rs
nvim .
cls
cargo make all
cd D:\rust-workspace\lien-quan-rs
cargo make all
cargo check
nvim .
cls
cargo check
cargo make all
cargo make run-test-binary
cargo make all
cls
cargo make all
cargo make run-test-binary
cargo make all
cargo make run-test-binary
cargo make all
cargo make run-test-binary
cd D:\rust-workspace\lien-quan-rs
cargo make build-injector
cargo make run-test-binary
cargo make all
cargo make run-test-binary
cargo make all
adb devices
cd D:\rust-workspace\lien-quan-rs
adb shell su -c "/data/local/tmp/inject 4365 /dev/liblien_quan_rs.so"
cargo make all
cls
cd libs\ainjector\
cargo init --bin
cargo make build-injector
exit
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb shell su -c "/data/local/tmp/inject 4365 /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject 18776 /dev/liblien_quan_rs.so"
adb logcat -s "SellingLobbies"
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb shell su -c "/data/local/tmp/inject 19107 /dev/liblien_quan_rs.so"
adb logcat -s "SellingLobbies"
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb logcat -s "SellingLobbies"
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb shell su -c "/data/local/tmp/inject 19107 /dev/liblien_quan_rs.so"
adb logcat -s "SellingLobbies"
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb shell su -c "/data/local/tmp/inject 19107 /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject 21595 /dev/liblien_quan_rs.so"
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb shell su -c "/data/local/tmp/inject 22198 /dev/liblien_quan_rs.so"
cargo make build-injector
rustup update
cargo make build-injector
ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
adb shell su -c "/data/local/tmp/inject 22198 /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject 6022 /dev/liblien_quan_rs.so"
cargo make build-injector
explorer .
adb shell su -c "/data/local/tmp/ainjector --pid 23408 --payload /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject 23408 /dev/liblien_quan_rs.so"
cargo make build-injector
adb shell su -c "/data/local/tmp/ainjector --pid 26096 --payload /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/ainjector --pid 26877 --payload /dev/liblien_quan_rs.so"
adb shell su -c "chcon -v u:object_r:apk_data_file:s0 /data/local/tmp/ainjector"
adb shell su -c "/data/local/tmp/ainjector --pid 29663 --payload /dev/liblien_quan_rs.so"
cargo make build-injector
adb shell su -c "/data/local/tmp/ainjector --pid 31794 --payload /dev/liblien_quan_rs.so"
nvim .
cls
cargo make build-injector
adb shell su -c "chcon -v u:object_r:apk_data_file:s0 /data/local/tmp/ainjector"
adb shell su -c "/data/local/tmp/ainjector --pid 31794 --payload /dev/liblien_quan_rs.so"
cargo make build-injector
adb shell su -c "/data/local/tmp/ainjector --pid 6349 --payload /dev/liblien_quan_rs.so"
cls
adb shell su -c "/data/local/tmp/ainjector --pid 3137 --payload /dev/liblien_quan_rs.so"
cargo make build-injector
adb shell su -c "/data/local/tmp/ainjector --pid 6351 --payload /dev/liblien_quan_rs.so"
cargo make build-injector
cargo make all
adb logcat -s "SellingLobbies"
cls
adb logcat -s "InternalRunningLog"
cd D:\rust-workspace\lien-quan-rs
cd libs\ptrace-api\
cargo init --lib
cargo make build-injector
nvim .
cargo make build-injector
cls
nvim .
cargo make build-injector
cd libs\ptrace-api\
cls
cross build --lib --target aarch64-linux-android
cross build --lib --target i686-linux-android
cross build --lib --target x86_64-linux-android
cd ../..
cargo make build-injector
explorer .
adb shell su -c "/data/local/tmp/ainjector --pid 4590 --payload /dev/liblien_quan_rs.so"
cargo make build-injector
adb shell su -c "/data/local/tmp/ainjector --pid 7914 --payload /dev/liblien_quan_rs.so"
cd D:\rust-workspace\lien-quan-rs
nvim .
cargo make build-injector
cls
cargo make all
adb shell su -c "/data/local/tmp/injector --pid 10490 --payload /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject --pid 10490 --payload /dev/liblien_quan_rs.so"
cls
adb shell su -c "/data/local/tmp/inject --pid 10490 --payload /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject 10490 /dev/liblien_quan_rs.so"
adb shell su -c "/data/local/tmp/inject 12605 /dev/liblien_quan_rs.so"
cargo make adb-inject-payload
cls
cargo make all
cls
cargo make build-push-injector
cargo make adb-inject-payload
cargo make build-push-injector
cargo make adb-inject-payload
nvim .
cls
adb shell "dumpsys window windows | grep -E 'mCurrentFocus|mFocusedApp'"
cargo make all
cargo make build-push-injector
cargo make adb-inject-payload
cargo make all
cls
cargo make all
cd libs
git clone https://github.com/ohchase/plt-rs
cd ..
nvim ./
cls
cargo make all
cls
cargo make adb-inject-payload
nvim .
cd D:\rust-workspace\lien-quan-rs
cargo make adb-inject-payload
cd D:\rust-workspace\lien-quan-rs
cargo make adb-inject-payload
cargo make all
cargo make build-push-injector
cargo make adb-inject-payload
cargo make build-push-injector
cargo make adb-inject-payload
cargo make build-push-injector
cargo make adb-inject-payload
adb logcat -s "InternalRunningLog"
nvim .
cd D:\rust-workspace\lien-quan-rs
cargo make all
cargo make adb-inject-payload
cargo make all
cls
cargo make all
cls
cargo make all
cls
cargo make all
explorer .
cargo make adb-inject-payload
cargo make all
nvim .
cls
cargo make all
cd D:\rust-workspace\lien-quan-rs
cls
nvim .
cls
cargo make all
cls
cargo make all
adb logcat -s "LienQuanLog"
adb logcat -c
cargo make adb-inject-payload
cargo make all
cls
cargo make build-push-payload
cargo make all
cargo make build-push-payload
cargo make adb-inject-payload
cd D:\rust-workspace\lien-quan-rs
cls
cargo make build-push-payload
cargo make adb-inject-payload
cargo make all
cargo make build-push-payload
cargo make adb-inject-payload
cls
cargo make build-push-payload
cls
cargo make build-push-payload
cargo make adb-inject-payload
cargo make build-push-payload
cargo make adb-inject-payload
cargo make build-push-payload
cargo make adb-inject-payload
cargo make build-push-payload
cargo make adb-inject-payload
cargo make all
cargo make build-push-payload
cargo make adb-inject-payload
cls
cargo make all
cls
cargo make all
adb logcat -s "LienQuanLog"
adb logcat -c
cargo make build-push-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
nvim .
cls
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-payload
cargo make build-push-run-payload
adb logcat -s "LienQuanLog"
cd D:\rust-workspace\lien-quan-rs
cls
cargo make build-push-run-payload
rustup list
rustup show
nvim .
cls
nvim .
cd D:\rust-workspace\lien-quan-rs
cargo make build-push-run-payload
explorer .
nvim .
cls
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
nvim .
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
nvim .
cd D:\rust-workspace\lien-quan-rs
cd libs\libil2cpp\
cargo init --lib
explorer .
cd ../..
cd proc_macros\
nvim .
cls
cargo make build-payload
cls
cargo make build-push-run-payload
cd libs\xdl\
git pull --recurse-submodules
git submodule update --init
git submodule update --recursive --remote
git pull --recurse-submodules
cls
git submodule add https://github.com/hexhacking/xDL.git ./
git submodule add https://github.com/hexhacking/xDL.git ./xDl/
explorer .
cargo init --lib
cls
cd libs\xdl\
cls
cross build --lib --target i686-linux-android
adb logcat -s "LienQuanLog"
nvim .
cargo build --lib --target i686-linux-android
cls
cd D:\rust-workspace\lien-quan-rs
cd libs\xdl\
ls
cargo build --lib --target i686-linux-android
explorer .
cls
cargo build --lib --target i686-linux-android
cls
cargo build --lib --target i686-linux-android
scoop install cmake
explorer .
cls
cargo build --lib --target i686-linux-android
cd D:\rust-workspace\lien-quan-rs
exit
cd libs\xdl\
cls
cargo build --lib --target i686-linux-android
cls
cargo build --lib --target i686-linux-android
cls
cargo build --lib --target i686-linux-android
cls
cargo build --lib --target i686-linux-android
cls
cargo build --lib --target i686-linux-android
cls
cargo build --lib --target i686-linux-android
cd D:\rust-workspace\lien-quan-rs
cls
cargo build --lib --target i686-linux-android
cd D:\rust-workspace\lien-quan-rs
cls
cd libs\xdl\
cargo build --lib --target i686-linux-android
nvim .
cd D:\rust-workspace\lien-quan-rs
cd libs\xdl\
cargo install cargo-ndk
cargo ndk -t x86 --bindgen build
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
rustup target install i686-linux-android
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
explorer .
nvim .
cls
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build -vv
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build -- --nocapture
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build -vv
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build -vv
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk build
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 build
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build -vv
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 build
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
nvim .
cls
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cls
cd ../..
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
nvim .
cls
cd D:\rust-workspace\lien-quan-rs
cargo make build-payload
cls
cargo make build-payload
cd libs\xdl\
ANDROID_NDK_HOME=D:\AndroidSdk\Sdk\ndk\23.2.8568313 cargo ndk -t x86 --bindgen build
cd ../..
cargo make build-payload
cargo ndk -t x86 --bindgen build
cls
cargo ndk -t x86 --bindgen build
cargo ndk -t x86 -t arm --bindgen build
cargo ndk -t x86 -t arm32 --bindgen build
cargo ndk -t x86 -t armeabi-v7a --bindgen build
rustup target add \
rustup target add i686-linux-android x86_64-linux-android armv7-linux-androideabi aarch64-linux-android
cargo ndk -t x86 -t armeabi-v7a --bindgen build
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build
explorer .
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
cls
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
cls
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
cls
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
cls
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
explorer .
cls
cargo make build-push-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cd libs\ainjector\
cargo ndk -t x86 -t armeabi-v7a -o ./target/jnilibs build --release
cargo ndk -t x86 -o ./target/jnilibs build --release
cd ../..
cargo make build-injector
cargo make all
cls
cargo make build-push-run-payload
cross build --lib --target i686-linux-android
adb push target/i686-linux-android/release/liblien_quan_rs.so /data/local/tmp
cross build --lib --target i686-linux-android --release
cross build --lib --release --target i686-linux-android
cross build --lib --target i686-linux-android
cd libs\xdl\
cargo ndk -t x86 -t armeabi-v7a -o ./target/jnilibs build --release
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
cd ../..
cargo ndk -t x86 -t armeabi-v7a --bindgen -o ./target/jnilibs build --release
cls
cargo make build-push-run-payload
cls
cargo ndk -t x86 build --release --package ainjector
cargo ndk -t x86 build --bin --release --package ainjector
cargo ndk -t x86 build --bin ainjector --release --package ainjector
rustup target install i686-linux-android
cargo ndk -t x86 build --bin ainjector --release --package ainjector
cargo ndk -t x86 build --bin ainjector --release --package ainjector -v
cls
cargo ndk -t x86 build --bin ainjector --release --package ainjector -v
nvim .
cls
cargo make build-push-run-payload
nvim .
cls
cd D:\rust-workspace\lien-quan-rs
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
nvim .
cd D:\rust-workspace\lien-quan-rs
cls
cargo make build-push-run-payload
nvim .
cls
nvim .
cls
cls
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
nvim .
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-payload
scoop install cmake
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-payload
cls
cargo make build-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
explorer .
cd libs\
cd unity-memory\
cargo init --lib
nvim .
cd D:\rust-workspace\lien-quan-rs
nvim .
cls
nvim .
cls
nvim .
cargo make build-payload
cd libs\unity-memory\inline_hook\
git submodule add https://github.com/sc2ad/beatsaber-hook.git ./
git submodule add https://github.com/sc2ad/beatsaber-hook.git ./beatsaber-hook
cd ../..
cargo make build-payload
cd ../
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo clean
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
cls
cargo install cargo-expand
cargo ndk -t armebi-v7a expand
cargo ndk -t armeabi-v7a expand
cargo ndk -t armeabi-v7a --bindgen expand
cargo ndk -t armeabi-v7a --bindgen expand crate::egui_app
cargo ndk -t armeabi-v7a --bindgen expand lien_quan_rs::egui_app
cargo ndk -t armeabi-v7a --bindgen expand
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
explorer .
cargo make build-push-run-payload
cd libs\unity-memory\inline_hook\
cargo ndk -t armeabi-v7a --bindgen build --release
cd ../../..
cls
cargo make build-payload
cargo make build-push-run-payload
cd libs\unity-memory\inline_hook\
cargo ndk -t armeabi-v7a --bindgen build --release
cd ../../..
cargo make build-push-run-payload
cargo ndk -t armeabi-v7a --bindgen expand
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-push-run-payload\
cargo make build-push-run-payload
cargo ndk -t armeabi-v7a --bindgen expand
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cd lien-quan-proc-macro\
cargo init --lib
nvim .
cls
cd ..
cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen expand lien_quan_rs::egui_input::::unity_input
cargo ndk -t armeabi-v7a --bindgen expand lien_quan_rs::egui_input::unity_input
cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen expand lien_quan_rs::egui_input::unity_input
cargo ndk -t armeabi-v7a --bindgen expand lien_quan_rs::egui_input
cargo ndk -t armeabi-v7a --bindgen expand egui_input::unity_input
cargo ndk -t armeabi-v7a --bindgen expand hooks
nvim .
cargo ndk -t armeabi-v7a --bindgen expand egui_input::unity_input
cargo ndk -t armeabi-v7a --bindgen expand hooks
cargo ndk -t armeabi-v7a --bindgen expand egui_input::unity_input
cd D:\rust-workspace\lien-quan-rs
cargo ndk -t armeabi-v7a --bindgen expand egui_input::unity_input
cargo ndk -t armeabi-v7a --bindgen expand hooks
cargo make build-payload
nvim .
cls
cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen expand hooks
cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen expand hooks
cargo make build-payload
cargo make build-payload -Z macro-backtrace
cargo ndk -t armeabi-v7a --bindgen build --release -Z macro-backtrace
RUSTFLAGS="-Zproc-macro-backtrace" cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen rustc -- -Zproc-macro-backtrace
cargo ndk -t armeabi-v7a --bindgen expand hooks
cargo make build-payload
nvim .
cls
cargo make build-payload
cargo make build-push-run-payload
nvim .
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cargo make build-push-run-payload\
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
nvim .
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
nvim .
cargo ndk -t armeabi-v7a --bindgen expand egui_app
cls
cargo ndk -t armeabi-v7a --bindgen expand egui_app
cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen expand egui_app
cargo make build-payload
nvim .
cargo make build-payload
cargo make build-push-run-payload
nvim .
cargo make build-payload
cargo ndk -t armeabi-v7a --bindgen expand egui_app
nvim .
cargo make build-payload
nvim .
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
cargo make build-push-run-payload
nvim .
cls
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make all
cargo make build-injector
cargo make all
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
nvim .
cd D:\rust-workspace\lien-quan-rs
cargo make build-injector
cargo make build-payload
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
nvim .
cls
cargo make build-payload
cargo make build-push-run-payload
nvim .
cls
nvim .
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cls
nvim .
cargo make build-payload
cargo make build-push-run-payload
nvim .
cd D:\rust-workspace\lien-quan-rs
explorer .
cargo make build-push-run-payload
cd libs\elf-info\
cargo init --lib
nvim .
cls
cd ../..
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
nvim .
cls
nvim .
cargo make build-push-run-payload
cls
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
cargo make build-payload
nvim .
cargo make build-push-run-payload
cargo make build-payload
cargo make build-push-run-payload
cargo make build-payload
cls
cargo make build-payload
cargo make build-push-run-payload
cd D:\rust-workspace\lien-quan-rs
cd libs\ainjector\
cargo ndk -t armeabi-v7a --bindgen build --release
cargo ndk -t x86 --bindgen build --release
cargo ndk -t x86 build --release
cargo ndk -t x86 --bindgen build --release
explorer .
cls
cargo make build-push-run-payload
cd ../..
cargo make build-push-run-payload
cargo make build-injector
cargo make build-push-run-payload
cargo make build-injector
cargo clean
cargo make all
nvim .
cargo make build-injector
cd libs\ainjector\
cargo ndk -t x86 --bindgen build --release
cargo ndk -t x64 --bindgen build --release
cargo ndk -t x32 --bindgen build --release
cargo ndk -t x86 --bindgen build --release
cargo ndk -t armeabi-v7a --bindgen build --release
cd ../..
cargo make all
cd D:\rust-workspace\rustdesk
cls
rustup show
pushsd
Push-Location
cd D:\rust-workspace\rustdesk
nvim .
cls
nvim .
explorer .
exit
explorer .
cd libs\rustdesk-server\
cargo init --lib
nvim .
cls
cargo build --release
nvim .
cd libs\rustdesk-server\
cd D:\rust-workspace\rustdesk\libs\rustdesk-server\
nvim .
cd ../..
cd libs\rustdesk-server\
cargo build --release
explorer .
scoop install extras/sqlitebrowser
cargo build --release
nvim .
cargo build --release
cls
cls
cargo build --release
nvim .
cargo build --release
cls
cd ../
git clone https://github.com/rustdesk/rustdesk-server
cd rustdesk-server\
cd D:\rust-workspace\rustdesk-server\
cls
cargo build --release
explorer .
cd ui
cargo build --release
cd html
pnpm install
cd ../
cargo build --release
cd html
pnpm build
cargo build --release
nvim .
cls
cd ui
cd D:\rust-workspace\rustdesk-server\
cd D:\rust-workspace\rustdesk
cargo make run-hbbs
cargo make build-hbbs
j
cargo make build-hbbs
nvim .
cargo make build-hbbs
cargo make run-hbbs
cargo make build-hbbs
cargo make run-hbbs
explorer .
cargo make build-hbbs
cargo make run-hbbs
cargo make build-hbbs
cd D:\rust-workspace\rustdesk-server\
cd D:\rust-workspace\rustdesk
cargo make build-hbbs
explorer .
cargo make build-hbbs
nvim .
cargo make build-hbbs
cargo make run-hbbs
cd flutter
flutter run windows --release
flutter run --target windows
explorer .
exit
cargo make run-hbbs
nvim .
cd D:\rust-workspace\rustdesk
explorer .
nvim .
cls
nvim .
cls
nvim .
cd D:\rust-workspace\rustdesk-server\
nvim .
nvim .
cd D:\rust-workspace\my-database
nvim .
cargo init
cargo run
nvim .
cls
nvim .
cd D:\rust-workspace\my-database
cargo run
cls
cargo run
cargo sqlx prepare
nvim .
cls
cargo run
cd server-proc-macro\
cargo init --lib
cls
cargo expand egui_app
cargo expand database
cargo expand crate::database
cargo expand
cd ../
cargo expand database
cargo check
cargo expand --help
cargo expand database --verbose
cargo expand database
cls
cargo expand database
cargo check
cargo clean
nvim .
cls
cargo check
cargo expand database
nvim .
cargo check
cargo expand database
cargo run
cargo check
cargo run
cargo expand database
nvim .
cargo run
cargo expand database
cargo run
cls
cargo run
cargo expand database
cargo run
nvim .
cls
nvim .
cargo run
nvim .
cls
cargo run
cargo expand database
nvim .
cls
cargo run
cargo expand database
cargo run
nvim .
cls
cd D:\rust-workspace\my-database
nvim .
cd D:\rust-workspace\my-database
cls
cargo check
cargo expand database
cargo check
nvim .
cargo run
cargo check
cargo run
cargo check
cls
cargo run
cargo check
nvim .
cls
cargo run
cls
cargo run
cargo check
cargo run
nvim .
cls
cargo check
nvim .
cls
cargo check
nvim .
cargo check
cls
cargo check
nvim .
cargo check
nvim .
cargo run
nvim .
git init
cd D:\rust-workspace\my-database
cargo check
nvim .
cls
cargo expand database
cargo expand services::user_service
cargo expand services::user_service --lib
cargo check
cd D:\rust-workspace\my-database
nvim .
ls
rmdir Migrations.toml
rm -r Migrations.toml\
ls
cargo check
nvim .
cargo check
cls
cargo check
cargo run
cargo cargo check
cargo check
cls
cargo check
cls
cargo check
nvim .
cargo run
cargo check
cargo run
cls
cargo run
cls
cargo run
cargo check
cargo run
cargo check
cargo run
cls
cargo check
cargo run
nvim .
cargo run
cargo check
cargo run
cargo check
cargo run
cargo check
cargo run
cargo check
cargo run
cargo check
cargo run
cls
cd D:\rust-workspace\my-database
cls
nvim .
cd D:\rust-workspace\my-database
nvim .
cargo check
cls
cargo check
cargo run
cls
cargo run
cls
nvim .
cls
cargo test
cargo test -- --nocapture
cls
cargo test -- --nocapture
cls
cargo test -- --nocapture
cargo run
cargo check
cargo run
cargo test
nvim .
cls
cd D:\rust-workspace\my-database
nvim .
cls
nvim .
cls
nvim .
cd D:\rust-workspace\my-database
rustlings lsp
cls
cd D:\rust-workspace\my-database
cls
cargo test
cargo run
cls
cargo run
cls
cargo test
nvim .
cls
cargo run
exit
cls
exit
cargo check
cls
nvim .
cls
cd D:\rust-workspace\projectA\frontend
pnpm run dev
cls
git init
git add README.md
pnpm --help
pnpm remove pocketbase
pnpm check
cls
pnpm check
cls
pnpm check
pnpm remove pocketbase
pnpm run dev
cls
nvim .
cd D:\rust-workspace\my-database
cls
cd D:\rust-workspace\projectA\frontend
cargo check
cargo check --bind
cargo check --bin
cargo check --bin tns
cls
cargo check --bin tns
nvim .
cls
nvim .
cargo check
cls
nvim .
cls
cargo check --bin tns --features all
rustup target add wasm32-unknown-unknown
cargo check --bin tns --features all
nvim .
cls
cargo check --bin tns --features all
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo build --bin tns --features all
cargo run --bin tns --features all
nvim .
cls
nvim .
cls
cargo run --bin tns --features all
cls
cd D:\rust-workspace\projectA\frontend
nvim .
cls
nvim .
cls
pnpm svelte-kit sync
pnpm check
pnpm svelte-kit sync
pnpm check
nvim .
cls
cls
pnpm check
pnpm run dev
cls
pnpm run dev
nvim .
nvim ./
cd D:\rust-workspace\projectA\frontend
cd D:\rust-workspace\my-database
cls
pnpm check
cls
cargo run --bin tns --features all
cls
pnpm run dev
cls
pnpm check
cls
pnpm check
nvim .
pnpm run dev
pnpm check
cls
cls
pnpm check
pnpm run dev
cls
pnpm check
nvim .
cls
cls
pnpm run dev
cls
nvim .
cls
pnpm check
pnpm run dev
cls
pnpm run dev
cls
pnpm run dev
cls
cargo run --bin tns --features all
pnpm run dev
cls
pnpm run dev
cls
pnpm check
nvim .
cls
pnpm check
pnpm run dev
cls
jcls
cls
pnpm run dev
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
jcls
cls
cargo run --bin tns --features all
cls
pnpm run dev
pnpm check
nvim .
cls
pnpm run dev
cls
cargo run --bin tns --features all
cls
cargo check --bin tns --features all
pnpm run dev
cls
nvim .
cls
nvim .
cls
cargo check --bin tns --features all
cls
cargo check --bin tns --features all
cls
cargo check --bin tns --features all
cargo run --bin tns --features all
cargo check
cargo run --bin tns --features all
nvim .
explorer .
cargo check
cls
cargo check
cargo run --bin tns --features all
cls
cd D:\rust-workspace\my-database
cargo check
cargo run --bin tns --features all
cls
cargo check
cargo run --bin tns --features all
cargo check
cargo run --bin tns --features all
nvim .
cls
nvim .
cls
cls
cargo install sqlx-cli
cargo sqlx prepare
cargo check
cargo sqlx prepare --check
cls
cargo check
cargo run --bin tns --features all
cls
cargo sqlx prepare --check
cargo sqlx prepare
cargo sqlx prepare --check
cargo sqlx prepare
nvim .
cls
cargo check
sqlx migrate run
cargo run --bin tns --features all --help
cargo run --bin tns --features all -- --help
nvim .
cls
nvim .
cls
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
nvim .
cd D:\rust-workspace\my-database
cargo check
nvim .
cls
cls
cargo run --bin tns --features all
cls
nvim .
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
bbcls
cls
cd D:\rust-workspace\projectA\frontend
cls
nvim .
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
pnpm run dev
cls
cd D:\rust-workspace\my-database
nvim .
cls
cd D:\rust-workspace\projectA\frontend
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cargo check --bin tns --features all
nvim .
cls
pnpm run dev
cls
cd D:\rust-workspace\my-database
cd D:\rust-workspace\projectA\frontend
cls
pnpm install axios
nvim .
cls
cargo check --bin tns --features all
pnpm run dev
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
pnpm run dev
cls
pnpm run dev
pnpm run release
pnpm run build
pnpm run preview
cls
pnpm clean
pnpm install socket.io-client
nvim .
cls
cargo run --bin tns --features all
cls
nvim .
cd D:\rust-workspace\my-database
cd D:\rust-workspace\projectA\frontend
nvim .
cls
pnpm run dev
cls
pnpm run dev
cls
pnpm run dev
cls
pnpm run dev
cls
pnpm run dev
pnpm remove socket.io-client
nvim .
cls
cargo run --bin tns --features all
kjcls
cls
cargo run --bin tns --features all
cls
pnpm run dev
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
pnpm run dev
cargo run --bin tns --features all
cls
pnpm run dev
nvim .
ls
cls
cargo run --bin tns --features all
cls
nvim .
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
pnpm run dev
cls
pnpm run dev
cls
pnpm run dev
cls
nvim .
cls
nvim .
cls
pnpm run dev
cls
cd D:\rust-workspace\my-database
cd D:\rust-workspace\projectA\frontend
cls
cargo run --bin tns --features all
cls
nvim .
cls
nvim .
cls
nvim .
cls
cargo run --bin tns --features all
cls
nvim .
cls
pnpm run dev
cargo run --bin tns --features all
cls
nvim .
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
nvim .
cls
cargo run --bin tns --features all
kkjcls
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
pnpm run dev
nvim .
cd D:\rust-workspace\my-database
cls
cd D:\rust-workspace\projectA\frontend
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
nvim .
cargo run --bin tns --features all
nvim .
pnpm run dev
cls
cls
nvim .
nvim
nvim .
:qa
pnpm run dev
cargo run --bin tns --features all
cls
cd 
cd D:\rust-workspace\rustdesk
nvim .
cd D:\rust-workspace\my-database
cls
cargo run --bin tns --features all
cls
nvim .
cls
cargo run --bin tns --features all
cls
cd D:\rust-workspace\my-database
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
nvim .
cls
cargo run --bin tns --features all
cls
nvim .
cargo run --bin tns --features all
cd D:\rust-workspace\rustdesk
cls
cls
cargo run --bin tns --features all
cd flutter\
cls
flutter run --target windows
flutter run windows --release
flutter run --target windows
flutter run --target window
flutter run
flutter run Windows --release
flutter run Windows
flutter run
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
cls
flutter run -d windows --release
cls
cargo run --bin tns --features all
kjcls
cls
flutter run -d windows --release
cls
cd ..
cargo run
cargo run --features flutter
cargo run
cargo run --bin tns --features all
cls
cd flutter\
flutter run -d windows --release
cls
cd ..
python3 .\build.py --portable --hwcodec --flutter --feature IddDriver
Test-Path "/flutter/build/windows/runner/Release/RustDeskIddDriver"
Remove-Item -path "/flutter/build/windows/runner/Release/RustDeskIddDriver"
rmdir /s /q "/flutter/build/windows/runner/Release/RustDeskIddDriver"
Push-Location flutter
rmdir
rm
rm -f -r -p "/flutter/build/windows/runner/Release/RustDeskIddDriver"
rm -f -r -p "./flutter/build/windows/runner/Release/RustDeskIddDriver"
rm -f -r -p "./flutter/build/windows/runner/Release/RustDeskIddDriver" && echo 'Ok'
rm -f -r -p "./flutter/build/windows/runner/Release/RustDeskIddDriver"; echo 'Ok'
nvim .
cargo run --bin tns --features all
nvim .
cls
cd D:\rust-workspace\rustdesk
cd D:\rust-workspace\my-database
cls
cargo run --bin tns --features all
cls
cargo run --bin tns --features all
nvim .
cls
cargo run --bin tns --features all
cls
nvim .
cd D:\rust-workspace\projectA\frontend
cls
nvim .
cls
nvim .
cls
cargo run --bin tns --features all
pnpm run dev
nvim .
cls
cd ..
cls
mkdir punisher
cd punisher\
cls
cargo init --lib
cd bootkit\
cargo init --lib
rustup --help
rustup target --list
rustup target --help
rustup target list
rustup target --help
rustup --help
rustup toolchain --help
rustup toolchain list
rustup show
nvim .
cls
nvim .
cls
nvim .
cls
cd D:\rust-workspace\punisher\
cargo build --bin bootkit
cargo build --bin -p bootkit
cargo build --bin bootkit
cargo build --bin bootkit -p
cargo build --bin bootkit -p bootkit
cargo build -p bootkit
nvim .
cls
nvim .
cargo build -p bootkit
cls
cd bootkit\
rustup show
rustup target
rustup toolchain list
rustup toolchain add nightly-x86_64-pc-windows-msvc
rustup show
cargo build
nvim .
cls
cd bootkit\
rustup override set nightly
nvim .
cls
cargo clean
nvim .
cls
cargo build
cd ..
cargo build -p bootkit
nvim .
cls
cd ..
cargo build -p bootkit
nvim .
cls
cd bootkit\
cd bootkit\
cargo build --release
nvim .
cd ..
start .
scoop install extras/putty
nvim .
cargo build --release
cls
cargo build --release
cd ..
cd debug_console\
cargo init
cls
cargo build --release
start .
cargo run --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
cls
cargo run --release
cd ..\bootkit\
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cd D:\rust-workspace\punisher\
cls
start .
cd bootkit\
cargo build --release
cls
cargo build --release
cd D:\rust-workspace\punisher\
start .
cd bootkit\
cls
cargo build --release
cargo build --release --target x86_64-unknown-uefi
cls
cargo build --release
nvim .
cls
cargo build --release
cls
cargo expand --release
start .
cargo build --release
cargo expand --release
cls
cargo build --release
start .
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cls
cargo build --release
cd D:\rust-workspace\punisher\
cls
cd bootkit\
cargo install cargo-xbuild
cargo build --bin bootx64
cargo build --release
cargo build --bin efikit --release
cls
cargo build --bin bootx64
cargo build --bin bootx64 --release
cls
cargo make build-loader
cargo rustc build --bin bootx64
cargo rustc build
cargo rustc
cls
cargo make build-loader
cls
cargo make build-loader
RUSTFLAGS="-Z pre-link-args=/subsystem:efi_application" cargo build --release
RUSTFLAGS="-Z pre-link-args=/subsystem:efi_application" cargo build --release --target x86_64-unknown-uefi
cls
cargo make build-loader
cargo make build-runtime
cls
cargo make build-efi
start .
nvim .
cls
nvim .
cls
nvim .
cls
nvim .
cls
cargo make build-efi
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
nvim .
cls
cd D:\rust-workspace\punisher\
nvim
cls
nvim
cd ~
nvim
cd D:\rust-workspace\punisher\
cd ..
nvim
nvim .
cd D:\rust-workspace\punisher\
ls
nvim
nvim .
cls
ls
cd D:\rust-workspace\punisher\
start .
cd D:\rust-workspace\punisher\
kil
ls
ck
ls
cc
nvim .
cls
nvim
cls
nvim
cls
exit
where.exe nu.exe
cls
nvim
cls
cd D:\rust-workspace\punisher\
cargo make build-loader
cls
nvim
exit
cls
cd D:\rust-workspace\punisher\
nvim
exit
cd D:\rust-workspace\punisher\
cls
cd bootkit\
cargo make build-loader
start .
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cd D:\rust-workspace\punisher\
cd bootkit\
cargo make build-loader
start .
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
cls
cargo make build-loader
nvim .
cls
history session 
history session 0
cd D:\rust-workspace\punisher\
history session
cls
cd bootkit\
cls
cargo make build-loader
start .
nvim .
cls
cd D:\rust-workspace\punisher\
cls
cd bootkit\
cargo make build-loader
start .
cd ..
cls
mkdir driver
cd driver\
ls
cargo init --lib
cd ..
mkdir hde
cd hde
cargo init --lib
nvim .
cls
nvim .
start .
cd ..
cd D:\rust-workspace\punisher\
nvim ./
nvim .
cls
nvim .
cd hde-rs\
cargo build --release
cls
cargo build --release
cls
cargo test -- --no-capture
cargo test --lib -- --no-capture
cargo test -- --nocapture
nvim .
cls
cd D:\rust-workspace\punisher\
nvim .
cls
cd D:\rust-workspace\punisher\
cd driver-loader\
cargo init --lib
cd driver-loader\
cargo build --release
nvim .
cls
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cd D:\rust-workspace\punisher\
cd driver-loader\
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo test --features gdrvloader -- --nocapture
cls
cargo build --bin gdrv --features gdrvloader -- --nocapture
cargo build --bin gdrv --features gdrvloader
cargo build --bin gdrv --features gdrvloader --release
start .
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cargo add winres
nvim .
cls
cls
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
nvim .
cd D:\rust-workspace\punisher\
cd driver-loader\
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
nvim .
cls
cd D:\rust-workspace\punisher\
cargo build --bin gdrv --features gdrvloader --release
start .
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cls
cargo make sign --profile production
cd driver
cargo make sign --profile production
cargo make sign -- --profile production
cd ..
cargo make --cwd ./driver --makefile makefile.toml --profile production
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
start .
cargo make --profile production --sign
cargo make --profile production sign
cd driver\
cargo make --profile production sign
cls
cd ..
cargo build --bin gdrv --features gdrvloader --release
cls
cd driver-loader\
cargo build --bin gdrv --features gdrvloader --release
cd ..
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
start .
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
cls
cargo build --bin gdrv --features gdrvloader --release
cd driver-loader\
cargo build --bin gdrv --features gdrvloader --release
cd ..
cd driver\
cd ..
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
cls
cd ..
cd punisher\
cd driver-loader\
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cargo add console
cargo remove console
nvim .
cls
cls
nvim .
cargo build --bin gdrv --features gdrvloader --release
cls
cargo build --bin gdrv --features gdrvloader --release
cd ..
cargo workspace-sync
nvim .
cd D:\rust-workspace\punisher\
cls
mkdir kernel-client
cd kernel-client\
cargo init --lib
nvim .
cls
rustc --version
rustup update
nvim .
cls
cargo clean
cargo build --lib --release
exit
nvim .
cls
nvim .
cls
cd kernel-client\
cargo build --example intel_v --features all -r
start .
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
nvim .
cd D:\rust-workspace\punisher\
cd kernel-client\
cargo build --example intel_v --features all -r
start .
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
nvim .
cls
cd D:\rust-workspace\punisher\
start .
cd kernel-client\
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cls
cargo build --example intel_v --features all -r
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
nvim .
cls
nvim .
cd D:\rust-workspace\punisher\
cls
cd kernel-client\
cargo test --features intel-vul -- --nocapture
nvim .
cls
cargo build --examples --features all -r
start .
cargo build --examples --features all -r
nvim .
cls
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
nvim .
cls
nvim .
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
cls
cargo build --examples --features all -r
nvim .
cd D:\rust-workspace\punisher\
start .
cd kernel-client\
cls
cargo build --examples --features all -r
start .
cargo build --examples --features all -r
cargo install cargo-bloat
cls
cargo bloat --example intel_v --features all -r
cargo bloat --release --example intel_v --features all
cargo bloat --release --example intel_v --features all -n
cargo bloat -n 10 --release --example intel_v --features all
cargo build --release --example intel_v --features all
nvim .
cls
cls
cargo build --release --examples --features all
cd ..
cls
mkdir hypervisor-rs
ls
rm hypervisor-rs\
ls
mkdir hypervisor-rust
cd hypervisor-rust\
cargo init --lib
nvim .
cls
cls
cargo build --release
nvim .
cls
nvim .
cls
nvim .
cls
nvim .
cls
nvim .
cls
nvim .
cls
nvim .
:qa
cls
cd D:\rust-workspace\punisher\
nvim .
cd driver\
cd ..
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
start .
cls
:qa
cd D:\rust-workspace\punisher\
ls
cd driver\
cls
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
cd ..
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
start .
cargo make --cwd ./driver --makefile makefile.toml --profile production sign
cls
cd driver-loader\
cargo build --release
cls
cargo make build-gdrv
start .
cargo make build-gdrv
nvim .
cls
nvim .
cargo make build-gdrv
cls
cargo make build-gdrv
nvim .
cls
nvim .
cls
nvim .
cls
cd D:\rust-workspace\punisher\
cls
cargo make sign --profile production
cls
cargo make sign --profile production
cargo make --profile production sign
cls
cargo make --profile production sign
nvim .
cls
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cls
nvim .
cargo make --profile production sign
cls
cargo make --profile production sign
cd D:\rust-workspace\punisher\
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cargo install --force cargo-make
cls
start .
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cls
cargo make --profile production sign
cls
cargo make --profile production sign
